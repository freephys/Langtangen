# headline:
T: Quiz

Q: What is your experience with Perl?
A: pull-down-menu  no experience | can recognize a Perl code | have made some small programs | have programmed a lot | I'm almost a Perl guru

Q: In how many of these languages can you write a program that prints "Hello, World!" on the screen?
A: multiple-choice  COBOL | Fortran 77 | Fortran 90 | Simula | C | C++ | Pascal | Basic | Java | Perl | Python | Tcl | Haskell | Lisp | Smalltalk | Scheme | Rexx | Eiffel | Ada | Common Lisp | Bourne shell | Bourne Again shell | C shell | tcsh | ksh | zsh | VisualBasic 

Q: Test on Perl programming knowledge: What does the following one-line Perl program do?

|<PRE>
|perl -e 'for (reverse @ARGV) { print " $_";}' frame*.png
|</PRE>

A: free-text

Q: Test on basic Tcl programming knowledge: What is the output of the following Tcl program?
|<PRE>
|
| set stem frame
| set n 142
| set filename [format "%s%04d.png" $stem $n]
| puts "filename=$filename"
|</PRE>

A: free-text

Q: Test on basic Python programming knowledge: What is the output of the following Python program?
|<PRE>
| print string.join(re.split(",","Hello, World!"),' -')
|</PRE>

A: free-text

# Hello - World!

Q: Test on basic knowledge of regular expressions: What is printed in the following code segment?
|<PRE>
|$filename = "frame1765.png"
|$filename =~ s/\.(pn[mg]|e?ps)/.gif/;
|print $filename;
|</PRE>

Q: Test on knowledge of pointer operations in C: Will the following two fragments of C code give identical results?
|<PRE>
|
| #define N 8
| double* a[N]; int i;  double* b; double* c; double s;
|
| /* initialize a */
| ...
|
| /* fragment 1: */
| for (s=0, i=0; i<=N-1; ++i) { s += a[N] }
|
| /* fragment 2: */
| s=0.0; b=a; c=a+N-1;
| for (; b!=&c; ++b) { s += *b; }
|
|</PRE>

A: free-text

Q: Write a "Hello, World!" program in C.

A: free-text

Q: You know that one of your C files somewhere in your home directory tree contains an unfinished program for generating fractals. Automate the search for a string "fractals" (or "Fractals") in all *.c files in your home directory tree.

A: free-text

# single choice (grading with numbers)
Q: Evaluate yourself as a computer programmer:
A: single-choice   1 (poor) | 2 | 3 | 4 | 5 | 6 (excellent)
# answers starting with integers enable computation of
# the average score on the output statistics

# In case you want the form in another language, edit the
# translations in the "language" file accordingly










